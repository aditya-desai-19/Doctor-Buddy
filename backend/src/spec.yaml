openapi: 3.0.0
info:
  title: Doctor Buddy
  version: 1.0.0
  description: Simple API with Swagger YAML

servers:
  - url: http://localhost:3000

paths:
  /:
    get:
      summary: Returns Hello World
      responses:
        '200':
          description: Successful greeting response
          content:
            text/plain:
              schema:
                type: string
                example: Hello World
  
  /api/doctor/sign-up:
    post:
      summary: Creates doctor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDoctorRequest'
      responses:
        '201':
          description: Successfully signed up
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
  
  /api/doctor/login:
    post:
      summary: Authenticates doctor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDoctorRequest'
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string

  /api/doctor/{id}:
    get:
      summary: Retrieves doctor's information
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully gets doctor's information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorInfoResponse'

    put:
      summary: Updates doctor's information
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDoctorInfoRequest'
      responses:
        '200':
          description: Successfully updates doctor's information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string

    delete:
      summary: Soft deletes doctor
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted doctor
          content:
            application/json:
              schema:  
                type: object
                properties:
                  message: 
                    type: string

  /api/patient/:
    post:
      summary: Creates a patient 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatientRequest'
      responses:
        '200':
          description: Successfully created a patient
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: 
                    type: string
    
    get:
      summary: Retrieve a list of patients
      parameters:
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: Maximum number of items to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of patients
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPatientResponse'

  /api/patient/{id}:
    get:
      summary: Retrieves patient's information
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully gets patient's information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientInfo'

    put:
      summary: Updates patient's information
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePatientRequest'
      responses:
        '200':
          description: Successfully updates patient's information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string

    delete:
      summary: Soft deletes patient
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted patient
          content:
            application/json:
              schema:  
                type: object
                properties:
                  message: 
                    type: string

  /api/treatment/:
    post:
      summary: Creates a treatment 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Treatment'
      responses:
        '200':
          description: Successfully created a treatment
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: 
                    type: string
    
    get:
      summary: Retrieve a list of treatments
      parameters:
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: Maximum number of items to return
          required: true
          schema:
            type: integer
        - name: patientId
          in: query
          description: Patient id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of treatments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTreatmentResponse'
  
  /api/treatment/{id}:
    get:
      summary: Retrieves treatment information
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully gets treatment information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreatmentInfo'

    put:
      summary: Updates treatment information
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTreatmentRequest'
      responses:
        '200':
          description: Successfully updates treatment information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string

    delete:
      summary: Soft deletes treatment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted treatment
          content:
            application/json:
              schema:  
                type: object
                properties:
                  message: 
                    type: string
  
  /api/payment/:
    post:
      summary: Creates a payment 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '200':
          description: Successfully created payment
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: 
                    type: string

    get:
      summary: Retrieve a list of payments
      parameters:
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: Maximum number of items to return
          required: true
          schema:
            type: integer
        - name: treatmentId
          in: query
          description: Patient id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of payments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentResponse'
    
  /api/payment/{id}:
    get:
      summary: Retrieves payment information
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully gets payment information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfo'

    put:
      summary: Updates payment information
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentRequest'
      responses:
        '200':
          description: Successfully updates payment information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string

    delete:
      summary: Soft deletes payment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successfully deleted treatment
          content:
            application/json:
              schema:  
                type: object
                properties:
                  message: 
                    type: string
    

components:
  schemas:
    CreateDoctorRequest:
      type: object
      properties:
        firstName: 
          type: string
        lastName: 
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - firstName
        - lastName
        - email
        - password
    
    LoginDoctorRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    DoctorInfoResponse: 
      type: object
      properties:
        firstName: 
          type: string
        lastName: 
          type: string
        email:
          type: string
    
    UpdateDoctorInfoRequest:
      type: object
      properties:
        firstName: 
          type: string
        lastName: 
          type: string
        email:
          type: string
      required:
        - firstName
        - lastName
        - email
    
    CreatePatientRequest:   
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        contactNumber:
          type: string
        doctorId:
          type: string
        email:
          type: string
      required:
        - firstName
        - lastName
        - contactNumber
        - doctorId

    UpdatePatientRequest:   
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        contactNumber:
          type: string
        email:
          type: string
      required:
        - firstName
        - lastName
        - contactNumber

    PatientInfo: 
      type: object
      required:
        - id
        - firstName
        - lastName
        - contactNumber
        - isDeleted
        - doctorId
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        contactNumber:
          type: string
        isDeleted:
          type: boolean
        doctorId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        email:
          type: string
          format: email
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true

    PaginationInfo:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer

    PaginatedPatientResponse:
      type: object
      properties:
        previous:
          $ref: '#/components/schemas/PaginationInfo'
          nullable: true
        next:
          $ref: '#/components/schemas/PaginationInfo'
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/PatientInfo'
    
    Treatment:
      type: object
      properties:
        name: 
          type: string
        patientId: 
          type: string
        description: 
          type: string
        cost: 
          type: integer
      required:
        - name
        - patientId
        - cost
    
    TreatmentInfo: 
      type: object
      required:
        - id
        - name
        - cost
        - isDeleted
        - patientId
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
        name:
          type: string
        cost:
          type: integer
        isDeleted:
          type: boolean
        patientId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        deletedAt:
          type: string
          format: date-time
          nullable: true
    
    PaginatedTreatmentResponse:
      type: object
      properties:
        previous:
          $ref: '#/components/schemas/PaginationInfo'
          nullable: true
        next:
          $ref: '#/components/schemas/PaginationInfo'
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/TreatmentInfo'
    
    UpdateTreatmentRequest:
      type: object
      properties:
        name: 
          type: string
        description: 
          type: string
        cost: 
          type: integer
      required:
        - name
        - cost

    Payment:
      type: object
      properties:
        amount:
          type: integer
        treatmentId:
          type: string
      required:
        - amount
        - treatmentId
    
    PaymentInfo: 
      type: object
      required:
        - id
        - amount
        - isDeleted
        - treatmentId
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
        amount:
          type: integer
        isDeleted:
          type: boolean
        treatmentId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
    
    PaginatedPaymentResponse:
      type: object
      properties:
        previous:
          $ref: '#/components/schemas/PaginationInfo'
          nullable: true
        next:
          $ref: '#/components/schemas/PaginationInfo'
          nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
    
    UpdatePaymentRequest:
      type: object
      properties:
        amount: 
          type: integer
      required:
        - amount